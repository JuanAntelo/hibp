{
  "name": "hibp",
  "tagline": "A Promise-based API for querying the 'Have I been pwned?' service.",
  "body": "## Installation\r\n\r\nLocal via npm:\r\n\r\n```shell\r\nnpm install --save hibp\r\n```\r\n\r\nBrowser via CDN (see [below](#using-in-the-browser) for more information):\r\n\r\n```html\r\n<script src=\"https://unpkg.com/hibp\"></script>\r\n```\r\n\r\n## Features\r\n\r\n* Get all breaches for an account\r\n* Get all breached sites in the system\r\n* Get a single breached site\r\n* Get all data classes\r\n* Get all pastes for an account\r\n* All queries return a Promise\r\n* Available server-side (Node.js) and client-side (browser)\r\n\r\n## Usage\r\n\r\n```javascript\r\nimport hibp from 'hibp';\r\n```\r\n\r\nNow the following functions are available in the `hibp` object:\r\n\r\n* [.breachedAccount(account, [options])](https://github.com/wKovacs64/hibp/tree/master/API.md#hibp.breachedAccount)\r\n* [.breaches([options])](https://github.com/wKovacs64/hibp/tree/master/API.md#hibp.breaches)\r\n* [.breach(breachName)](https://github.com/wKovacs64/hibp/tree/master/API.md#hibp.breach)\r\n* [.dataClasses()](https://github.com/wKovacs64/hibp/tree/master/API.md#hibp.dataClasses)\r\n* [.pasteAccount(email)](https://github.com/wKovacs64/hibp/tree/master/API.md#hibp.pasteAccount)\r\n\r\n##### Example:\r\n\r\n```javascript\r\nimport hibp from 'hibp';\r\n\r\nhibp\r\n  .breachedAccount('rick.sanchez')\r\n  .then((data) => {\r\n    if (data) {\r\n      // Bummer...\r\n      console.log(data);\r\n    } else {\r\n      // Phew! We're clear.\r\n      console.log('Good news â€” no pwnage found!');\r\n    }\r\n  })\r\n  .catch((err) => {\r\n    // Something went wrong.\r\n    console.log(err.message);\r\n  });\r\n```\r\n\r\nPlease see the [API reference](https://github.com/wKovacs64/hibp/tree/master/API.md) for more detailed usage information and\r\nadditional examples.\r\n\r\n#### Using in Node.js < 0.12\r\n\r\nThis module requires a Promise implementation to exist in the global namespace\r\nprior to being loaded. Therefore, to facilitate use on versions of Node.js\r\nbefore 0.12, you are responsible for providing a polyfill. I recommend\r\n[es6-promise][es6-promise].\r\n\r\n##### Example:\r\n\r\n```javascript\r\n// This must be first!\r\nrequire('es6-promise/auto');\r\n\r\nvar hibp = require('hibp');\r\n```\r\n\r\n#### Using in the browser\r\n\r\nThere is a Universal Module Definition (UMD) build provided in the package\r\n`dist` directory for usage in the browser. When using this build, an `hibp`\r\nobject will be added to the browser's `window` object. Development and\r\nproduction (minified) UMD builds are both provided for download:\r\n\r\n* [https://unpkg.com/hibp/dist/hibp.js][cdn-dev]\r\n* [https://unpkg.com/hibp/dist/hibp.min.js][cdn-prod]\r\n\r\nYou can include one of these builds directly via CDN (this example will\r\nreference the `latest` tag version of the production build by default, but you\r\ncan specify a particular version if desired - see [unpkg][unpkg] for details):\r\n\r\n```html\r\n<script src=\"https://unpkg.com/hibp\"></script>\r\n```\r\n\r\nAlternatively, you may bundle it in with client-side code with a module bundler\r\nlike [webpack][webpack]. If your build process honors the\r\n`browser` field in `package.json`, you can import or require it normally:\r\n\r\n```javascript\r\n// ES2015\r\nimport hibp from 'hibp';\r\n\r\n// ES5\r\nvar hibp = require('hibp');\r\n```\r\n\r\nIf your build process does not respect the `browser` field of `package.json`,\r\nyou may explicitly include or require the UMD version like so:\r\n\r\n```javascript\r\n// ES2015\r\nimport hibp from 'hibp/dist/hibp.min.js';\r\n\r\n// ES5\r\nvar hibp = require('hibp/dist/hibp.min.js');\r\n```\r\n\r\n**N.B.** As stated above, this module requires a Promise implementation to\r\nexist in the global namespace prior to being loaded. Therefore, to facilitate\r\nusage on [browsers without native Promise support][caniuse-promise], you are\r\nresponsible for providing a polyfill. Again, I recommend\r\n[es6-promise][es6-promise].\r\n\r\n## Projects Using hibp\r\n\r\n* [pwned][pwned] - a command-line tool for querying the\r\n  '[Have I been pwned?][haveibeenpwned]' service\r\n\r\nSend me a [PR][pulls] or an email and I'll add yours to the list.\r\n\r\n## License\r\n\r\nThis module is distributed under the [MIT License](https://github.com/wKovacs64/hibp/tree/master/LICENSE.txt).\r\n\r\n[troy]: http://www.troyhunt.com\r\n[haveibeenpwned]: https://haveibeenpwned.com\r\n[es6-promise]: https://github.com/stefanpenner/es6-promise\r\n[unpkg]: https://unpkg.com\r\n[webpack]: https://webpack.github.io\r\n[cdn-dev]: https://unpkg.com/hibp/dist/hibp.js\r\n[cdn-prod]: https://unpkg.com/hibp/dist/hibp.min.js\r\n[caniuse-promise]: http://caniuse.com/#search=promise\r\n[pwned]: https://github.com/wKovacs64/pwned\r\n[pulls]: https://github.com/wKovacs64/hibp/pulls\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}